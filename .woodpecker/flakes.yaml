
steps:

  - name: prepare
    image: nixos/nix
    environment:
      NIX_SSHOPTS: '-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null' 
    commands:
      - echo "experimental-features = nix-command flakes" >> /etc/nix/nix.conf
      - mkdir -p ~/.ssh
      - echo $SSH_PRIVATE_KEY_B64 | base64 -d > ~/.ssh/id_rsa
      - chmod 600 ~/.ssh/id_rsa
      - rm /etc/ssl/certs/ca-bundle.crt
      - cp /nix/var/nix/profiles/default/etc/ssl/certs/ca-bundle.crt /etc/ssl/certs/ca-bundle.crt
      - SSL_CERT_FILE=/etc/ssl/certs/ca-bundle.crt nix run --store "unix:///mnt/nix/var/nix/daemon-socket/socket?root=/mnt" github:getflakery/bootstrap/2967cd71b3201755c0065bc3e7f02ec5e309d0d8#bootstrap -- --write-files --turso-token $TURSO_TOKEN --template-id $TEMPLATE_ID --encryption-key $ENCRYPTION_KEY
      - scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null flakery@$BINARY_CACHE_IP:/var/cache-pub-key.pem .
      - echo "extra-substituters = http://$BINARY_CACHE_IP" >> /etc/nix/nix.conf
      - cat cache-pub-key.pem
      - echo "extra-trusted-public-keys = `cat cache-pub-key.pem`" >> /etc/nix/nix.conf
      - cat /etc/nix/nix.conf
      - echo $FLAKE
      - nix build $FLAKE -vvvv --option narinfo-cache-positive-ttl 0 -L --print-out-paths --impure > out.txt 
      - cat out.txt
      - cat out.txt | xargs -I {} nix copy --substitute-on-destination --to ssh://flakery@$BINARY_CACHE_IP {}
      # - cat out.txt | xargs -I {}  nix-copy-closure -v --gzip -s --to ssh://flakery@$BINARY_CACHE_IP $(type -tP {})

    volumes:
      - /nix:/mnt/nix:ro
skip_clone: true
